import { SignInButton, useUser } from "@clerk/nextjs";
import Head from "next/head";
import type { RouterOutputs } from "~/utils/api";
import { api } from "~/utils/api";
import Image from "next/image";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { LoadingPage } from "~/components/loading";

dayjs.extend(relativeTime);

export default function Home() {
  const CreatePostWizard = () => {
    const { user } = useUser();

    if (!user) return null;

    return (
      <div className="flex w-full gap-3">
        <Image
          src={user.imageUrl}
          alt="Profile Picture"
          className="h-12 w-12 rounded-full"
          width={48}
          height={48}
        />
        <input
          placeholder="Type some emojis!!"
          className="grow bg-transparent"
        />
      </div>
    );
  };

  type PostWithUser = RouterOutputs["posts"]["getAll"][number];

  const PostView = (props: PostWithUser) => {
    const { post, author } = props;
    return (
      <div key={post.id} className="flex gap-3 border-b border-slate-400 p-4">
        <Image
          src={author.profileImage}
          alt={`${author.username}'s profile picture`}
          className="h-12 w-12 rounded-full"
          width={48}
          height={48}
        />
        <div className="flex flex-col">
          <div className="flex gap-1 text-slate-100">
            <span>{`@${author.username}`}</span>
            <span className="font-thin">Â·</span>
            <span className="font-thin">{dayjs(post.createdAt).fromNow()}</span>
          </div>
          <span>{post.content}</span>
        </div>
      </div>
    );
  };

  const Feed = () => {
    const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

    if (postsLoading) return <LoadingPage />;

    if (!data) return <div>Something went wrong</div>;

    return (
      <div className="flex flex-col">
        {data.map((fullPost) => (
          <PostView {...fullPost} key={fullPost.post.id} />
        ))}
      </div>
    );
  };

  const { isLoaded: userLoaded, isSignedIn } = useUser();

  if (!userLoaded) return <div></div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center ">
        <div className="w-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex border-b border-slate-400 p-4">
            {!isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {isSignedIn && <CreatePostWizard />}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
}
